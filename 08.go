//Дана переменная int64. Разработать программу которая устанавливает
//i-й бит в 1 или 0.
package main

import "fmt"

//создаются переменные n, i, val в которые кладутся число, номер бита и 0 или 1
// &: поразрядная конъюнкция (операция И или поразрядное умножение). Возвращает 1,
//если оба из соответствующих разрядов обоих чисел равны 1. Возвращает 0,
//если разряд хотя бы одного числа равен 0
// |: поразрядная дизъюнкция (операция ИЛИ или поразрядное сложение).
//Возвращает 1, если хотя бы один из соответствующих разрядов обоих чисел равен 1
// ^: поразрядное исключающее ИЛИ. Возвращает 1, если только один из
//соответствующих разрядов обоих чисел равен 1
//&^: сброс бита (И НЕ). В выражении z = x &^ y каждый бит z равен 0, если соответствующий бит y равен 1. Если бит в y равен 0, то берется значение соответствующего бита из x.
func main() {
	var n int64
	var i, val int
	fmt.Println("Введите число:")
	fmt.Scan(&n)
	fmt.Println("Введите номер бита:")
	fmt.Scan(&i)
	fmt.Println("Во что устанавливать, 0 или 1:")
	fmt.Scan(&val)

	fmt.Printf("Число %d в двоичной системе до изменения %b\n", n, n)
	if val == 1 {
		n |= 1 << i
	} else {
		n &^= 1 << 1
	}

	fmt.Printf("Число %d в двоичной системе после изменения %b\n", n, n)
}
